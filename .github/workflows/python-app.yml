# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Asteroids 2085

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    
    runs-on: ${{ matrix.os }} # üêß(Penux), ü™ü(Bloat-dows Bro), üçè(Bitten-Apple People)

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.13.1"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    # TODO: Switch to actions/setup-python@v3 when Python 3.13.1 is officially supported.
    #- name: Set up Python
    #  uses: actions/setup-python@v3
    #  with:
    #    python-version: ${{ matrix.python-version }}
    # TODO: Switch to actions/setup-python@v3 when Python 3.13.1 is officially supported.

    - name: Install Python 3.13.1 (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev curl libbz2-dev
        curl -O https://www.python.org/ftp/python/3.13.1/Python-3.13.1.tgz
        tar -xf Python-3.13.1.tgz
        cd Python-3.13.1
        ./configure --enable-optimizations
        make -j$(nproc)
        sudo make altinstall
        python3.13 --version
    
    - name: Install Python 3.13.1 (Windows)
      if: runner.os == 'Windows'
      run: |
        choco --version || echo "Chocolatey is not installed"
        choco install python --version=3.13.1
        python --version || echo "Python 3.13.1 installation failed"
    
    - name: Install Python 3.13.1 (macOS)
      if: runner.os == 'macOS'
      run: |
        brew --version || echo "Homebrew is not installed"
        brew install python@3.13.1
        python3.13 --version || echo "Python 3.13.1 installation failed"
        
    - name: Cache Python dependencies ü´ô
      uses: actions/cache@v3
      with:
          path: |
              ~/.cache/pip # Linux & Mac
              C:\Users\runneradmin\AppData\Local\pip\Cache  # For Windows
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
              ${{ runner.os }}-pip-
      
    - name: Install testing & project dependencies üíâ
      run: |
        python -m pip install --upgrade pip
        pip install flake8==6.0.0 pytest==7.4.0
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: We do a little linting with flake8... for the QA lovers! ü§åüèª
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Run pytest
      run: |
        pytest --maxfail=5 --disable-warnings
        
   #TODO: Revisit this when i actually careeee ü™≥
   # - name: Run pytest with coverage
   #   run: |
   #     pytest --cov=asteroids_2085 --cov-report=xml
   # - name: Upload coverage to Codecov
   #   uses: codecov/codecov-action@v3
   #   with:
   #     files: coverage.xml
